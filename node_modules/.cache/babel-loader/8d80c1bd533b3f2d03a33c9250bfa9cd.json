{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/navigation';\nimport Logo from './components/Logo/logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport './App.css';\nimport Particles from 'react-particles-js';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 200,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initalState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initalState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initalState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\facerecognitionbrain\\src\\App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Signin","Register","FaceRecognition","Particles","particlesOptions","particles","number","value","density","enable","value_area","initalState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","onInputChange","event","target","onButtonSubmit","state","app","models","predict","Clarifai","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/navigation';\nimport Logo from './components/Logo/logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport './App.css';\nimport Particles from 'react-particles-js';\n\n\nconst particlesOptions = {\n    particles: {\n            number: {\n              value:200,\n              density: {\n                enable:true,\n                value_area: 800,\n              }\n\n            }\n    }\n}\n\n\nconst initalState  = {\n      input:'',\n      imageUrl:'',\n      box:{},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id:'',\n        name:'',\n        email:'',\n        entries:0,\n        joined:''\n      }\n}\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initalState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id:data.id,\n        name:data.name,\n        email:data.email,\n        entries:data.entries,\n        joined:data.joined\n    }})\n  }\n\n// componentDidMount() {\n//   fetch('http://localhost:3000/')\n//   .then(response => response.json())\n//   .then(console.log)\n// }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =  data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width -(clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box:box});\n  }\n\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl:this.state.input})\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,\n     this.state.input)\n    .then(response => {\n      if(response){\n        fetch('http://localhost:3000/image',{\n        method:'put',\n        headers: {'Content-Type':'application/json'},\n        body: JSON.stringify({\n          id:this.state.user.id\n        })\n      })\n        .then(response =>response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries:count}))\n        })\n        .catch(console.log)\n\n        }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n    .catch(err => console.log(err));\n  }\n\n\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState(initalState)\n    }else if (route === 'home'){\n      this.setState({isSignedIn:true})\n    }\n      this.setState({route:route})\n    \n  }\n\n  render() {\n    const {isSignedIn,imageUrl,route,box} = this.state;\n\n    return (\n      <div className=\"App\">\n            <Particles className='particles'\n                params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        {  route === 'home'\n         ? <div> \n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onButtonSubmit={this.onButtonSubmit} \n              />\n              <FaceRecognition box={box}imageUrl={imageUrl} />\n            </div>\n            :(route === 'signin' \n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>)\n            \n             \n          }      \n      </div>\n    );\n }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}