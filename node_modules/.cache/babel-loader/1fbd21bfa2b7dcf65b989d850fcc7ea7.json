{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/navigation';\nimport Logo from './components/Logo/logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nconst app = new Clarifai.App({\n  apiKey: 'fc40a9562b444063839bc614ebba5fc9'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 200,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.calculateFaceLocation(response)).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\facerecognitionbrain\\src\\App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Clarifai","Particles","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/navigation';\nimport Logo from './components/Logo/logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\n\nconst app = new Clarifai.App({\n  apiKey: 'fc40a9562b444063839bc614ebba5fc9'\n});\n\nconst particlesOptions = {\n    particles: {\n            number: {\n              value:200,\n              density: {\n                enable:true,\n                value_area: 800,\n              }\n\n            }\n    }\n}\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input:'',\n      imageUrl:'',\n      box:{},\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =  data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width -(clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box:box});\n  }\n\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl:this.state.input})\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,\n     this.state.input)\n    .then(response => this.calculateFaceLocation(response))\n    .catch(err => console.log(err));\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n            <Particles className='particles'\n                params={particlesOptions} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n        onInputChange={this.onInputChange} \n        onButtonSubmit={this.onButtonSubmit} \n        />\n        <FaceRecognition imageUrl={this.state.imageUrl} />\n      </div>\n    );\n }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}